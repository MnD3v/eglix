#!/bin/bash

# Script de test de s√©curit√© pour les formulaires Eglix
# V√©rifie que tous les formulaires sont s√©curis√©s en production

echo "üîí TEST DE S√âCURIT√â DES FORMULAIRES - Eglix"
echo "=============================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour tester une URL
test_form_security() {
    local url=$1
    local form_name=$2
    
    echo -e "\n${YELLOW}Test: $form_name${NC}"
    echo "URL: $url"
    
    # Test 1: V√©rifier les headers de s√©curit√©
    echo "1. V√©rification des headers de s√©curit√©..."
    headers=$(curl -s -I "$url" 2>/dev/null)
    
    if echo "$headers" | grep -q "Strict-Transport-Security"; then
        echo -e "   ‚úÖ ${GREEN}HSTS activ√©${NC}"
    else
        echo -e "   ‚ùå ${RED}HSTS manquant${NC}"
    fi
    
    if echo "$headers" | grep -q "X-Frame-Options"; then
        echo -e "   ‚úÖ ${GREEN}X-Frame-Options pr√©sent${NC}"
    else
        echo -e "   ‚ùå ${RED}X-Frame-Options manquant${NC}"
    fi
    
    if echo "$headers" | grep -q "Content-Security-Policy"; then
        echo -e "   ‚úÖ ${GREEN}CSP configur√©${NC}"
    else
        echo -e "   ‚ùå ${RED}CSP manquant${NC}"
    fi
    
    # Test 2: V√©rifier la pr√©sence du token CSRF
    echo "2. V√©rification du token CSRF..."
    page_content=$(curl -s "$url" 2>/dev/null)
    
    if echo "$page_content" | grep -q 'name="csrf-token"'; then
        echo -e "   ‚úÖ ${GREEN}Token CSRF pr√©sent${NC}"
    else
        echo -e "   ‚ùå ${RED}Token CSRF manquant${NC}"
    fi
    
    # Test 3: V√©rifier HTTPS
    echo "3. V√©rification HTTPS..."
    if [[ $url == https://* ]]; then
        echo -e "   ‚úÖ ${GREEN}HTTPS activ√©${NC}"
    else
        echo -e "   ‚ùå ${RED}HTTP d√©tect√©${NC}"
    fi
    
    # Test 4: V√©rifier les cookies s√©curis√©s
    echo "4. V√©rification des cookies s√©curis√©s..."
    if echo "$headers" | grep -q "Set-Cookie.*Secure"; then
        echo -e "   ‚úÖ ${GREEN}Cookies s√©curis√©s${NC}"
    else
        echo -e "   ‚ö†Ô∏è  ${YELLOW}Cookies non s√©curis√©s (normal en d√©veloppement)${NC}"
    fi
}

# URLs √† tester (remplacer par vos vraies URLs)
BASE_URL="https://eglix.lafia.tech"

echo "Test des formulaires sur: $BASE_URL"
echo ""

# Test des diff√©rents formulaires
test_form_security "$BASE_URL/members/create" "Formulaire d'ajout de membre"
test_form_security "$BASE_URL/tithes/create" "Formulaire d'ajout de d√Æme"
test_form_security "$BASE_URL/donations/create" "Formulaire d'ajout de don"
test_form_security "$BASE_URL/offerings/create" "Formulaire d'ajout d'offrande"
test_form_security "$BASE_URL/expenses/create" "Formulaire d'ajout de d√©pense"
test_form_security "$BASE_URL/services/create" "Formulaire de planification de culte"
test_form_security "$BASE_URL/events/create" "Formulaire d'ajout d'√©v√©nement"
test_form_security "$BASE_URL/projects/create" "Formulaire d'ajout de projet"

echo ""
echo "=============================================="
echo "üîí TEST TERMIN√â"
echo ""
echo "Si tous les tests montrent ‚úÖ, vos formulaires sont s√©curis√©s !"
echo "Si des tests montrent ‚ùå, v√©rifiez la configuration de s√©curit√©."
echo ""
echo "Pour plus de d√©tails, consultez les logs Laravel :"
echo "tail -f storage/logs/laravel.log"
